{
  "openapi": "3.0.0",
  "info": {
    "title": "Restify CRUD API",
    "description": "This is a simple CRUD API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Support",
      "url": "http://www.swagger.io/support",
      "email": "support@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/customers": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get All customers",
        "description": "Get All customers by pagination",
        "operationId": "getAllCustomer",
        "responses": {
          "200": {
            "description": "Get All customer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/error_response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "customer": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          }
        }
      },
      "Error": {
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "enum": [500, 501, 503, 504]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Success": {
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "genericResponse": {
        "description": "The generic API response, send in case of errors or simple confirmations",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["message"],
              "properties": {
                "code": {
                  "type": "string",
                  "example": "000"
                },
                "message": {
                  "type": "string",
                  "example": "why this code is returned"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "INVALID_ARGUMENT / FAILED_PRECONDITION / OUT_OF_RANGE",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "enum": [400]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NOT_FOUND",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "enum": [404]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "error_response": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "success_response": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Success"
            }
          }
        }
      },
      "status_response": {
        "description": "The API status to be used by monitoring systems and health checks",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "timestamp"],
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "timestamp": {
                  "type": "string",
                  "example": "1970-01-01T01:01:01.000Z"
                }
              }
            }
          }
        }
      }
    }
  }
}
